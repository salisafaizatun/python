{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sebelum ditukar : A= 100 B= 25\n",
      "sesudah ditukar : A= 25 B= 100\n"
     ]
    }
   ],
   "source": [
    "A=100\n",
    "B=25\n",
    "print(\"sebelum ditukar : A=\",A,\"B=\",B)\n",
    "C=A\n",
    "A=B\n",
    "B=C\n",
    "print(\"sesudah ditukar : A=\",A,\"B=\",B)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sebelum ditukar : A= 10 B= 5 C= 7 D= 15\n",
      "sesudah ditukar :  A= 15 B= 10 C= 5 D= 7\n"
     ]
    }
   ],
   "source": [
    "A=10\n",
    "B=5\n",
    "C=7\n",
    "D=15\n",
    "print(\"sebelum ditukar : A=\" ,A, \"B=\" ,B, \"C=\",C, \"D=\" ,D)\n",
    "E=A\n",
    "A=D\n",
    "D=C\n",
    "C=B\n",
    "B=E\n",
    "print(\"sesudah ditukar :  A=\" ,A, \"B=\" ,B, \"C=\",C, \"D=\" ,D)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " LUAS DAN KELILING PERSEGI PANJANG\n",
      "==========================\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "masukkan panjang : 7\n",
      "masukkan lebar : 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "luas persegi panjang= 35.0\n",
      "keliling persegi panjang= 24.0\n"
     ]
    }
   ],
   "source": [
    "print (\" LUAS DAN KELILING PERSEGI PANJANG\")\n",
    "print (\"==========================\")\n",
    "panjang = float (input(\"masukkan panjang :\"))\n",
    "lebar = float (input(\"masukkan lebar :\"))\n",
    "luas = panjang*lebar\n",
    "kel = 2*panjang+2*lebar\n",
    "print (\"luas persegi panjang=\",luas)\n",
    "print (\"keliling persegi panjang=\",kel)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   LUAS DAN KELILING LINGKARAN  \n",
      "================================\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "masukkan jari-jari : 7\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "luas lingkaran   = 154.0\n",
      "keliling lingkaran = 44.0\n"
     ]
    }
   ],
   "source": [
    "print (\"   LUAS DAN KELILING LINGKARAN  \")\n",
    "print (\"================================\")\n",
    "jari = float (input (\"masukkan jari-jari :\"))\n",
    "pi = 22/7\n",
    "luas =pi*jari*jari\n",
    "kel = 2*pi*jari\n",
    "print (\"luas lingkaran   =\",luas)\n",
    "print (\"keliling lingkaran =\",kel)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x = 7\n",
      "y = 10\n",
      "\n",
      "\n",
      "x == y hasilnya False\n",
      "x != y hasilnya True\n",
      "x > y hasilnya False\n",
      "x < y hasilnya True\n",
      "x >= y hasilnya False\n",
      "x <= y hasilnya True\n"
     ]
    }
   ],
   "source": [
    "x = 7\n",
    "y = 10\n",
    "print ('x =',x)\n",
    "print ('y =',y)\n",
    "print ('\\n')\n",
    "print ('x == y hasilnya',x==y)\n",
    "print ('x != y hasilnya',x!=y)\n",
    "print ('x > y hasilnya',x>y)\n",
    "print ('x < y hasilnya',x<y)\n",
    "print ('x >= y hasilnya',x>=y)\n",
    "print ('x <= y hasilnya',x<=y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Ketik Nilai Celcius = 9\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Celcius =  9.0\n",
      "Reamur  =  7.2\n",
      "Kelvin  =  282.0\n"
     ]
    }
   ],
   "source": [
    "Celcius=float(input(\"Ketik Nilai Celcius =\"))\n",
    "Reamur = 4/5*Celcius\n",
    "Fahrenhit = 9/5*Celcius+32\n",
    "Kelvin = 273+Celcius\n",
    "print(\"Celcius = \",Celcius)\n",
    "print(\"Reamur  = \",Reamur)\n",
    "print(\"Kelvin  = \",Kelvin)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Ketik nilai detik = 90\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "90 detik = 0  hari +  0  jam +  1  menit +  30  detik\n"
     ]
    }
   ],
   "source": [
    "detik=int(input(\"Ketik nilai detik =\"))\n",
    "D=detik\n",
    "H=D//86400\n",
    "D=D%86400\n",
    "J=D//3600\n",
    "D=D%3600\n",
    "M=D//60\n",
    "D=D%60\n",
    "print(detik,\"detik =\",H,\" hari + \",J,\" jam + \",M,\" menit + \",D,\" detik\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Ketik nilai Rp = 10000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10000  Rp =  0  Ratusan +  0  Lima Puluh +  0  Dua Puluh +  1  Ceban +  0  Goceng +  0  Rp \n"
     ]
    }
   ],
   "source": [
    "Rp=int(input(\"Ketik nilai Rp =\"))\n",
    "R=Rp\n",
    "S=R//100000\n",
    "R=R%100000\n",
    "L=R//50000\n",
    "R=R%50000\n",
    "D=R//20000\n",
    "R=R%20000\n",
    "C=R//10000\n",
    "R=R%10000\n",
    "G=R//5000\n",
    "R=R%5000\n",
    "print(Rp,\" Rp = \",S,\" Ratusan + \",L,\" Lima Puluh + \",D,\" Dua Puluh + \",C,\" Ceban + \",G,\" Goceng + \",R,\" Rp \" )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
